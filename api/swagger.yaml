openapi: 3.0.0
info:
  title: Shareholder Disclosure Hub API
  description: |
    # About

    Broadridge developed the Shareholder Disclosure Hub (SDH) to assist banks and
    other intermediaries with their compliance obligations with respect to the
    shareholder identification regulations made law in the 2017 amendment to the
    Shareholder Rights Directive (SRD II). SRD II allows issuers or issuer agents to
    submit a disclosure request to the chain of intermediaries at any time throughout
    the year at their chosen frequency. On behalf of Hub-participating intermediaries
    the Hub validates/authenticates these requests, provides the necessary request
    data to the Hub participant’s system, receives and validates the required response
    data, forwards the request to the Hub participant’s underlying intermediary
    clients and files the full response with the issuer or issuer agent.

    The SDH API is built on the `Open API 3.0.3` specification. **[[LINK](https://swagger.io/specification/)]**

    ## API Versioning
    ---
    The API is versioned using the Semantic versioning 2.0.0 (semver) specification. **[[LINK](https://semver.org/spec/v2.0.0.html)]**

    The versioning format is `major.minor.path`. The `major.minor` portion of the semver (e.g. 2.0.0, 2.1.0) shall designate a change in the feature.
    `".patch"` versions addresses errors if any in the document/SDH API.

    ## API Technical Specifications
    ---
    The API provides the following services:

    - **API Authentication:** The SDH API requires Bearer HTTP authentication. Every request **must** contain an `Authorization` header using the username and password associated with a user account existing in SDH.

      Format of the authorization header:

      ```
      Authorization: Bearer <token>

      Example:
      Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmVzT24iOjE1ODM0NTAxMDA1NTksImVtYWlsIjoidXNlcjFAc2MxLmNvbSIsIm1ldGEiOiJEcUE5Q3Rwdjg1RnVZa3B5TlM0RjAyMjdDVStRTUJpM25lekJwL0FtdVBtNGM3M1NFOWlQNC93bGFrZ2taSG1pWHg2cVgyNkk2RHczdTdmWDVRVGJIT1JtTVBtcUtZaGJRUGd5UHBxT2pzNHE0dEVyM1d2b1lxS0xEd3IwdkhTYmc1a3VkUHRXRno4ZTVWaWNkSTh6L08ydHFzYk9JTDc3NnFib2NzdnVneGN4ckg4Njg4akd2azVtaVhwbFY5UldIZlFlZEFmS3BxOWx5aEZuaWZOd3NQNU15aFIxRExKUGl2ZEtCRkJzY0pYWXRoUERsRGxvNExZOXRtdDVNTUVrckZIQUlFanhCUlBLbWhmYk9UNnowa3NyUnJnVGxRPT0iLCJ0b2tlbiI6IkF6bllnRG1zZjRVaFd3ZWFOZlRXZWRoTXlXSWpzSkd3VGlkd05hZmc2RUU9In0=.smRPmkC6TeZmUnwlrEjexEKHCehzS8qBC8mbIJOOJe0=
      ```
      The token is valid for `14400 seconds` i.e. `4 hours` from the date and time of its generation.

    - **Disclosure requests:** This API endpoint enables the fetching of shareholder disclosure requests which are in `OPEN` and `PENDING` state.
      This request must be accompanied by the JWT generated by the `API Authentication` endpoint, as mentioned above.

    - **Disclosure response:** This section provides a set of endpoints for uploading a disclosure response.

      - **Upload token:** A request for file upload must be accompanied by a CSRF token in the header of the request.
          To generate a CSRF token for a file containing the disclosure response, an MD5 checksum of the file (in hex format), along with the name of the file
          is to be provided in the request. This request must be accompanied by the JWT generated by the `API Authentication` endpoint, as mentioned above.

      - **File upload:** Upload a file containing response to a disclosure request.
        - The file should be of `JSON` format and should have the following naming convention **disclosureResponseIdentification_YYYYMMDDHHMMSS.json**.
          - `disclosureResponseIdentification`: value of the disclosureResponseIdentification field in the response.
          - `YYYYMMDDHHMMSS`: The date and time in UTC timezone in the said format.
          For e.g. 4c582ed0eb3c01cb671000014d93738f_20200403103044.json
        - The structure of the response is defined under `DisclosureResponse` schema.
        - The file upload request must be accompanied by the CSRF and the authentication tokens.

      - **File Processing status:** This API endpoint enables the fetching the statuses of disclosure responses uploaded.

      **Note:** The SDH API currently doesn't support processing of bulk responses. Therefore only one response per file upload is allowed for processing.
  contact:
    name: SDH Tech Support
    email: SRD-Hub-Dev@broadridge.com
  version: 1.0.0-oas3
servers:
- url: https://uat.stateexplorer.broadridge.com/sdh_api
  description: UAT environment for client acceptance testing
- url: https://qa.stateexplorer.broadridge.com/sdh_api
  description: QA environment for internal testing
tags:
- name: Token
- name: Shareholder Disclosure Requests
- name: Disclosure Response
paths:
  /token:
    post:
      tags:
      - Token
      summary: Generate a valid JWT token
      requestBody:
        description: The request body should contain email and password in JSON format.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
            example:
              email: user1@sc1.com
              password: xxxxxxxxxxxxxx
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
              example:
                token_type: Bearer
                expires_in: "25200"
                expires_on: "1583450100559"
                resource: https://uat.stateexplorer.broadridge.com/srd_api
                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmVzT24iOjE1ODM0NTAxMDA1NTksImVtYWlsIjoidXNlcjFAc2MxLmNvbSIsIm1ldGEiOiJEcUE5Q3Rwdjg1RnVZa3B5TlM0RjAyMjdDVStRTUJpM25lekJwL0FtdVBtNGM3M1NFOWlQNC93bGFrZ2taSG1pWHg2cVgyNkk2RHczdTdmWDVRVGJIT1JtTVBtcUtZaGJRUGd5UHBxT2pzNHE0dEVyM1d2b1lxS0xEd3IwdkhTYmc1a3VkUHRXRno4ZTVWaWNkSTh6L08ydHFzYk9JTDc3NnFib2NzdnVneGN4ckg4Njg4akd2azVtaVhwbFY5UldIZlFlZEFmS3BxOWx5aEZuaWZOd3NQNU15aFIxRExKUGl2ZEtCRkJzY0pYWXRoUERsRGxvNExZOXRtdDVNTUVrckZIQUlFanhCUlBLbWhmYk9UNnowa3NyUnJnVGxRPT0iLCJ0b2tlbiI6IkF6bllnRG1zZjRVaFd3ZWFOZlRXZWRoTXlXSWpzSkd3VGlkd05hZmc2RUU9In0=.smRPmkC6TeZmUnwlrEjexEKHCehzS8qBC8mbIJOOJe0=
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
              example:
                status: false
                description: Missing email in the request body.
        "401":
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
              example:
                status: false
                description: Invalid user credentials
      security: []
  /disclosureRequests:
    post:
      tags:
      - Shareholder Disclosure Requests
      summary: Get disclosure requests which are in OPEN and PENDING state.
      requestBody:
        description: The request body is in JSON format.
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              examples:
                disclosureRequestsAvailable:
                  value:
                    status: true
                    requests:
                    - requestId: 4c582ed0eb3c01cb671000014d93738f
                      requestDetails:
                        disclosureRequestType: NEWM
                        disclosureResponseRecipient:
                          identification:
                            lei: 7H6GLXDRUGQFU57RNE91
                          recipientName: Issuer Agent 1
                          responseRecipientAddress:
                            anyBIC: TESTANYBIC
                            emailAddress: xyz@email.com
                            postalAddress:
                              addressLine:
                              - Address LIne1
                              - Address LIne2
                              addressType: BIZZ
                              buildingNumber: "124"
                              country: UK
                              countrySubDivision: Munich
                              postBox: P.O. Box 59
                              postCode: "12375"
                              streetName: Destiny Vista
                              townName: Pagacton
                        issuer:
                          lei: 7H6GLXDRUGQFU57RNE91
                        financialInstrumentIdentification:
                          isin: DE000BAY0017
                        forwardRequestIndicator: "Yes"
                        issuerDisclosureDeadline:
                          date:
                            date: 2020-04-30
                        issuerDisclosureRequestIdentification: TESTBAY01
                        requestShareHeldDate:
                          dateCalculationMethod: LIFO
                        responseThroughChainIndicator: "No"
                        shareholdersDisclosureRecordDate:
                          date:
                            date: 2020-04-08
                        sharesQuantityThreshold: 1000
                        isinMarketCode: DE
                      metadata:
                        status: OPEN
                        sender:
                          anyBIC: DAKVDEFF701
                        requestMode:
                          platform: PLATFORM
                          referenceId: 4c582ed0eb3c01cb671000014d93738f
                        forwardDeadlineDate: 2020-04-07T19:00:00+01:00
                        responseDeadlineDate: 2020-04-10T19:00:00+01:00
                        requestOriginTimestamp: 2020-04-07T11:53:20Z
                        requestReceiptTimestamp: 2020-04-07T11:55:49Z
                    - requestId: 1b0f46a3e5111c631a280001076c80e2
                      requestDetails:
                        disclosureRequestType: NEWM
                        disclosureResponseRecipient:
                          identification:
                            lei: 7H6GLXDRUGQFU57RNE91
                          recipientName: Issuer Agent 1
                          responseRecipientAddress:
                            postalAddress:
                              addressLine: []
                              addressType: BIZZ
                              buildingNumber: "124"
                              country: UK
                              countrySubDivision: Munich
                              postBox: P.O. Box 59
                              postCode: "12375"
                              streetName: Destiny Vista
                              townName: Pagacton
                        financialInstrumentIdentification:
                          isin: DE000BAY0017
                        forwardRequestIndicator: "Yes"
                        issuer:
                          nameAndAddress:
                            address:
                              addressLine: []
                              addressType: BIZZ
                              buildingNumber: "124"
                              country: UK
                              countrySubDivision: Munich
                              postBox: P.O. Box 59
                              postCode: "12375"
                              streetName: Destiny Vista
                              townName: Pagacton
                            name: Issuer Agent 1
                        issuerDisclosureDeadline:
                          date:
                            date: 2020-04-22
                        issuerDisclosureRequestIdentification: TESTTEST
                        responseThroughChainIndicator: "No"
                        shareholdersDisclosureRecordDate:
                          date:
                            date: 2020-04-08
                        isinMarketCode: DE
                      metadata:
                        status: OPEN
                        sender:
                          anyBIC: DAKVDEFF701
                        requestMode:
                          platform: PLATFORM
                          referenceId: 1b0f46a3e5111c631a280001076c80e2
                        forwardDeadlineDate: 2020-04-07T19:00:00+01:00
                        responseDeadlineDate: 2020-04-10T19:00:00+01:00
                        requestOriginTimestamp: 2020-04-07T11:42:15Z
                        requestReceiptTimestamp: 2020-04-07T11:54:33Z
                disclosureRequestsNotAvailable:
                  value:
                    status: false
                    requests: []
        "401":
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401_1'
              example:
                status: false
                description: Invalid token authentication scheme
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_422'
              example:
                status: false
                description: Malformed/Expired Token
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
              example:
                status: false
                descrption: Internal Server Error
      security:
      - bearerAuth: []
  /fileUploadToken:
    post:
      tags:
      - Disclosure Response
      summary: Generate a valid CSRF Token
      requestBody:
        description: The request body should contain the checksum of the file that
          is to be uploaded.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
            example:
              checksum: 7be8db115ad78de0d8eadf0101de51dc
              filename: 000039611a45bf75e10b0000d8f95248_20200407231655.json
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_1'
              example:
                token_type: X-CSRFToken
                expires_in: "7200"
                expires_on: "1586288805596"
                csrf_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmVzT24iOjE1ODU2NDY2Nzc2NTcsImVtYWlsIjoiYXBpdXNlcjFAY3NkLmNvbSIsIm1ldGEiOiJ1NjBhUXNxQVJOM0lJNU1Na1QrQnVHVjcrZW1VNnROUUVFdDRmZDZPOGVqQmV5S3pDN0ZTcjNUa1FlS0M2Z3JkNlBvaTgwaThLMlJUQ3E5ZHZRTmpEYUFYQVppWlhZRGw5dWJ5eVFVRUpHMWljUnR6NlZUMEE4UnQwcndiMnMydC93KzFyZCtqVlNvK2FpOHoyazRWc1h4U3RkbVJXMENBallZbndEQzMxdWJQZlJYL0NwY0VjNTdFbDZwc2o1UVI3Mkx1cDVIWkV1Qllva25jdjdzR0svS05ZelJ4dzVpK2ZWeXVYRzVHdTdVWG1RR3JaYlNEdjQ4S0ZnPT0iLCJ0b2tlbiI6IlcrUkVXWk56RHlUcXhPVTNzc2k5VlhLU2xwbTNQMnVMSGw1YXhNQkVpWjA9In0=.drrViSfTNEX0NlXXLDa6DNl5r0ZwdV1XFi4S+lwhDg4=
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
              examples:
                MissingChecksum:
                  value:
                    status: false
                    description: Missing checksum value in the request
                InvalidChecksum:
                  value:
                    status: false
                    description: Invalid checksum
                MissingFilename:
                  value:
                    status: false
                    description: Missing filename value in the request
                InvalidFilename:
                  value:
                    status: false
                    description: Invalid filename
        "401":
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401_1'
              example:
                status: false
                description: Invalid token authentication scheme
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_422'
              example:
                status: false
                description: Malformed/Expired Token
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
              example:
                status: false
                descrption: Internal Server Error
      security:
      - bearerAuth: []
  /uploadDisclosureResponse:
    post:
      tags:
      - Disclosure Response
      summary: Submit a response (both intermediary and final disclosure) to a shareholder
        disclosure request.
      parameters:
      - name: X-CSRFToken
        in: header
        required: true
        style: simple
        explode: false
        schema:
          minLength: 16
          type: string
      requestBody:
        description: The disclosure response must be in a JSON format.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_2'
            encoding:
              file:
                contentType: application/json
                style: form
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_202'
              example:
                status: true
                fileId: 4c582ed0eb3c01cb671000014d93738f
                filename: 4c582ed0eb3c01cb671000014d93738f_20200403103044.json
                description: File is accepted and processing is in progress.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
              examples:
                ChecksumValidationFailure:
                  summary: The value of checksum provided through the /fileUploadToken
                    is different to that of the one calculated by the API.
                  value:
                    status: false
                    fileId: 0bcf254136b15ae7e0d4ee2ff2cc264c
                    filename: 000039611a45bf75e10b0000d8f95248_20200407231655.json
                    description: Checksum validation failure
                    errors: []
                UnauthorizedRequest:
                  summary: When a user is not authorized to respond to a disclosure
                    request.
                  value:
                    status: false,
                    fileId: 56d13d69d4ae7866cf68fae7e8ec2dd0
                    filename: 000039611a45bf75e10b0000d8f95248_20200407231655.json
                    description: Unauthorized to respond to this request
                    errors: []
                EmptyDiscloureResponseIdentification:
                  summary: When the disclosureResponseIdentification value is either
                    not defined or is empty.
                  value:
                    status: false
                    fileId: c15d0e8a38c998bca3aac0abd4aee934
                    filename: 000039611a45bf75e10b0000d8f95248_20200407231655.json
                    description: disclosureResponseIdentification element is either
                      undefined or empty
                    errors: []
                InvalidJSONFormat:
                  summary: Failed to parse JSON.
                  value:
                    status: false
                    fileId: b29d5914dd7a76e5a7605abe8c9083c3
                    filename: 000039611a45bf75e10b0000d8f95248_20200407231655.json
                    description: Failed to parse the json
                    errors: []
                SchemaValidationError:
                  summary: Schema validation failed due to missing element.
                  value:
                    status: false
                    fileId: 81bb4ee61256ba62a9db7e0635a9e58a
                    filename: 0000131e51cd5a265d190000b3771a9a_20200407231655.json
                    description: Response is invalid and the file is rejected. Resend
                      the response after fixing the errors.
                    errors:
                    - keyword: required
                      dataPath: /disclosureInformation/safekeepingAccountAndHoldings/0
                      message: should have required property 'safekeepingAccount'
                ProcessingStatusError:
                  summary: Cannot accept new response while the request status in
                    PROCESSING
                  value:
                    status: false
                    fileId: 41e1cd345ff944a5b064f2a329e1ffa0
                    filename: 0000131e51cd5a265d190000b3771a9a_20200407231655.json
                    description: Cannot accept new response while the request status
                      in PROCESSING
                    errors: []
                InvalidDisclosureResponseIdentification:
                  summary: Invalid Disclosure Response Identification
                  value:
                    status: false
                    fileId: 18ba52f24cae4513584ec04b4e51a5bd
                    filename: 0000131e51cd5a265d190000b3771a9b_20200407231655.json
                    description: Disclosure request identification not found
                    errors: []
                NoIntermediariesFound:
                  summary: |
                    No intermediaries found in the response. This response is sent only when the disclosureType is "INTERMEDIARIES"
                    and no intermediaries were found i.e with shareholdingType NOMI.
                  value:
                    status: false
                    fileId: 18ba52f24cae4513584ec04b4e51a5bd
                    filename: 0000131e51cd5a265d190000b3771a9b_20200407231655.json
                    description: No Intermediaries found in the response
                    errors: []
                ResponseFiledBeforeRecordDate:
                  summary: |
                    When response to a shareholder disclosure request is filed before the record date.
                  value:
                    status: false
                    fileId: 5777fd86bb6cce23c9e0c01d142f2093
                    filename: 000082b930edb9ee52dd0000f23d1a37_20200407231655.json
                    description: Response is rejected as it is filed before record
                      date
                    errors: []
        "401":
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401_1'
              example:
                status: false
                description: Invalid token authentication scheme
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_422'
              examples:
                InvalidAccessToken:
                  value:
                    status: false
                    description: Malformed/Expired Token
                InvalidCSRFToken:
                  value:
                    status: false
                    description: Malformed/Expired X-CSRFToken
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
              example:
                status: false
                descrption: Internal Server Error
      security:
      - bearerAuth: []
  /fileProcessingStatus:
    post:
      tags:
      - Disclosure Response
      summary: Provide processing status on the response file uploaded.
      requestBody:
        description: The disclosure response  must be in a JSON format.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_3'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
              examples:
                ValidResponse:
                  summary: VALID
                  value:
                    status: true
                    disclosureResponseIdentification: 4c582ed0eb3c01cb671000014d93738f
                    result:
                    - fileId: 473e485a2a59cf1bdef733c5daf02e77
                      fileProcessingStatus: COMPLETED
                      filename: 000039611a45bf75e10b0000d8f95248_04072020231655.json
                      responseStatus: VALID
                      description: Response has been accepted and processed without
                        any errors.
                    - fileId: 3afa9e49310ef64bf12b77a70548576d
                      fileProcessingStatus: COMPLETED
                      filename: 000039611a45bf75e10b0000d8f95248_04072020231655.json
                      responseStatus: VALID
                      description: Response has been accepted and processed without
                        any errors.
                ValidWithErrorsResponse:
                  summary: VALID_WITH_ERRORS
                  value:
                    status: true
                    disclosureResponseIdentification: 0000000039611a45bf75e10b0000d8f95248
                    result:
                    - fileId: 7c327ad33617e75c709951e0339572bb
                      fileProcessingStatus: COMPLETED
                      filename: 000039611a45bf75e10b0000d8f95248_04072020231655.json
                      responseStatus: VALID_WITH_ERRORS
                      description: Response contains errors which are acceptable.
                        However, they must be corrected before the deadline. Otherwise,
                        the response is filed with fillers.
                      errors:
                      - keyword: required
                        dataPath: /disclosureInformation/safekeepingAccountAndHoldings/0/accountSubLevel/disclosure/0/accountHolder/naturalPerson
                        message: should have required property 'emailAddress'
                      - keyword: required
                        dataPath: /disclosureInformation/safekeepingAccountAndHoldings/0/accountSubLevel/disclosure/1/accountHolder/naturalPerson
                        message: should have required property 'emailAddress'
                      - keyword: required
                        dataPath: /disclosureInformation/safekeepingAccountAndHoldings/0/accountSubLevel/disclosure/2/accountHolder/naturalPerson
                        message: should have required property 'emailAddress'
        "401":
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401_1'
              example:
                status: false
                description: Invalid token authentication scheme
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                ResourceNotFound:
                  value:
                    status: false
                    description: No result found for matching FileId/disclosureResponseIdentification
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_422'
              example:
                status: false
                description: Malformed/Expired Token
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
              example:
                status: false
                descrption: Internal Server Error
      security:
      - bearerAuth: []
components:
  schemas:
    AnyBIC:
      properties:
        anyBIC:
          pattern: '[A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}'
          type: string
          description: |
            Code allocated to a financial or non-financial institution by the ISO 9362 Registration
            Authority, as described in ISO 9362:2014 - 'Banking - Banking telecommunication messages - Business identifier code (BIC)'.

            Constraints\:

            Only a valid Business identifier code is allowed. Business identifier codes for financial or nonfinancial
            institutions are registered and published by the ISO 9362 Registration Authority in the
            ISO directory of BICs, and consists of eight (8) or eleven (11) contiguous characters.
          example: BRFOUS31XXX
    ClientIdentification:
      properties:
        clientIdentification:
          maxLength: 50
          minLength: 1
          type: string
          description: Unique and unambiguous identification of the client's counterparty.
          example: HC1056AB12348989
    Country:
      pattern: ^[A-Z]{2,2}$
      type: string
      description: |
        The code is checked against the list of country names obtained from the United Nations (ISO 3166, Alpha-2 code).

        Code to identify a country, a dependency, or another area of particular geopolitical interest,
        on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code).
      example: NL
    DistinguishedName:
      properties:
        distinguishedName:
          pattern: ^(ou[=]{1}[A-Za-z0-9]{3},)(o[=]{1}[A-Za-z]{6}[A-Za-z0-9]{2},)(o[=]{1}swift|SWIFT)$
          type: string
          description: |
            Distinguished Name for sending the request via SWIFT.
            Format:
              ou=branch,o=bic8,o=swift

              A valid DN would be ou=bbb,o=pppppppp,o=swift
    DisclosureResponse:
      required:
      - disclosureInformation
      - disclosureResponseIdentification
      - disclosureType
      type: object
      properties:
        disclosureResponseIdentification:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Provide Unique request ID that was generated and provided by
            Broadridge in the request details. This will also be used as
            unique identifier of response to the requestor (issuer/issuer agent).
          example: ABC13245687778778
        disclosureType:
          type: string
          description: |
            Indicates the type of response. Valid disclosure types are\:

            1) INTERMEDIARIES - The response contains details about the intermediaries to which the request is to be forwarded.

            2) RESPONSE - The response contains the complete response (along with the intermediaries) that is to be filed with the requestor of the shareholder disclosure request i.e. issuer/issuer agent.
          example: INTERMEDIARIES
          enum:
          - INTERMEDIARIES
          - RESPONSE
        disclosureInformation:
          type: object
          description: |
            Provide detailed shareholding disclosure information or indicate that disclosure information is not provided.
          oneOf:
          - $ref: '#/components/schemas/NoDisclosure'
          - $ref: '#/components/schemas/SafeKeepingAccountAndHoldings'
        supplementaryData:
          $ref: '#/components/schemas/SupplementaryData'
      description: Schema of the Disclosure Response
    Date:
      properties:
        date:
          type: object
          description: Date expressed as a calendar date.
          oneOf:
          - $ref: '#/components/schemas/DateChoice'
          - $ref: '#/components/schemas/DateTimeChoice'
    DateChoice:
      properties:
        date:
          title: Specified date.
          type: string
          description: |
            Date expressed as a calendar date.
            A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format.
          format: date
          example: 2019-08-26
    DateTimeChoice:
      properties:
        dateTime:
          title: Specified date and time.
          type: string
          description: |
            A particular point in the progression of time defined by a mandatory date and a mandatory
            time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ),
            local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss).
          format: date-time
          example: 2017-07-21T17:32:28.255Z
    DateCode:
      properties:
        dateCode:
          type: object
          description: Specifies the type of date.
          oneOf:
          - $ref: '#/components/schemas/DateCodeSet'
          - $ref: '#/components/schemas/DateProprietary'
    DateCodeSet:
      properties:
        code:
          type: string
          description: |
            Standard code to indicate the date is unknown.
            Default value is "UKWN"
            UKWN(Unknown) - Date is unknown by the sender or has not been established.
          default: UKWN
    DateProprietary:
      type: object
      properties:
        proprietary:
          oneOf:
          - $ref: '#/components/schemas/GenericIdentification30'
      description: |
        Proprietary identification of the type of date.
    DateCalculationMethod:
      properties:
        dateCalculationMethod:
          type: string
          description: |
            Indicates what is the logical method to be used to determine and communicate from which
            date the shares have been held.

            Valid values:
              1) FIFO - First in, first out.
              2) LIFO - Last in, first out.
          enum:
          - FIFO
          - LIFO
    DateCalculationDescription:
      properties:
        dateCalculationDescription:
          maxLength: 350
          minLength: 1
          type: string
          description: |
            Provides the description on how the date from which the shares have been held should be determined and communicated.
    Errors:
      properties:
        errors:
          minItems: 0
          type: array
          description: Description of errors if any.
          items:
            $ref: '#/components/schemas/Errors_errors'
      example:
        errors:
        - keyword: required
          message: message
          dataPath: dataPath
        - keyword: required
          message: message
          dataPath: dataPath
    EmailAddress:
      properties:
        email:
          maxLength: 256
          minLength: 1
          pattern: ^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$
          type: string
          example: abc@xyz.com
    EmailAddresses:
      properties:
        emailAddresses:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
    GenericIdentification:
      required:
      - identification
      - issuer
      type: object
      properties:
        identification:
          maxLength: 35
          minLength: 1
          type: string
          description: Proprietary information, often a code, issued by the data source
            scheme issuer.
          example: ISN02566698798
        issuer:
          maxLength: 35
          minLength: 1
          type: string
          description: Entity that assigns the identification.
          example: UTIB
        schemeName:
          maxLength: 35
          minLength: 1
          type: string
          description: Short textual description of the scheme.
      description: |
        Information related to an identification, for example, party identification or account identification.
    GenericIdentification30:
      required:
      - identification
      - issuer
      type: object
      properties:
        identification:
          maxLength: 4
          minLength: 4
          type: string
          description: Proprietary information, often a code, issued by the data source
            scheme issuer.
          example: ABCD
        issuer:
          maxLength: 35
          minLength: 1
          type: string
          description: Entity that assigns the identification.
          example: UTIB
        schemeName:
          maxLength: 35
          minLength: 1
          type: string
          description: Short textual description of the scheme.
      description: |
        Information related to an identification, for example, party identification or account identification.
    IntermediaryIdentification:
      properties:
        identification:
          type: object
          description: Details to identify the underlying intermediary.
          anyOf:
          - $ref: '#/components/schemas/AnyBIC'
          - $ref: '#/components/schemas/LEI'
          - $ref: '#/components/schemas/SDHPlatformID'
    InvestorTypeCode:
      properties:
        code:
          type: string
          description: |
            Investor type expressed as an ISO 20022 code.

            Valid code(s) are\:
              1) 'ELIG': Eligible Counter Party. Eligible customers are the most sophisticated
                  level of investor, able to opt out of some the protections afforded by conduct of business rules.
              2) 'RETL': Retail Client. Retail customers are the least sophisticated level of investor.
              3) 'PROF': Professional Client. Professional customers are, for example, investment firms, credit institutions, insurance companies.
          example: ELIG
          enum:
          - ELIG
          - RETL
          - PROF
    InvestorTypeProprietaryIdentification:
      properties:
        proprietary:
          $ref: '#/components/schemas/GenericIdentification'
      description: Investor Type expressed as a proprietary code.
    InvestorType:
      type: object
      description: Type of investor.
      oneOf:
      - $ref: '#/components/schemas/InvestorTypeCode'
      - $ref: '#/components/schemas/InvestorTypeProprietaryIdentification'
    LEI:
      properties:
        lei:
          pattern: ^[A-Z0-9]{18,18}[0-9]{2,2}$
          type: string
          description: |
            Legal entity identifier of the party.

            Legal Entity Identifier is a code allocated to a party
            as described in ISO 17442 'Financial Services - Legal Entity Identifier (LEI)'.
          example: 213800WWTABZ1GOJHH37
    LegalPerson:
      properties:
        legalPerson:
          $ref: '#/components/schemas/LegalPerson_legalPerson'
    NaturalPerson:
      properties:
        naturalPerson:
          minItems: 1
          type: array
          description: Private Person
          items:
            $ref: '#/components/schemas/NaturalPerson_naturalPerson'
    NaturalPersonLocalIdentification:
      properties:
        code:
          type: string
          description: |
            Type of identification expressed as a code.

            Valid code(s) are\:
              1) 'ARNU': Alien registration number - Number assigned by a government agency to identify foreign nationals.
              2) 'CUST': Concat - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the firstname and surname.
              3) 'CORP': Corporate Identification - Number assigned to a corporate entity.
              4) 'DRLC': Driver License Number - Number assigned to a driver's license.
              5) 'IDCD': Identity Card Number - Number assigned by a national authority to an identity card.
              6) 'NRIN': National Registration Identification Number - National registration identification number. In Singapore this is known as the NRIC.
              7) 'CCPT': Passport Number - Number assigned by a passport authority.
              8) 'SOCS': Social Security Number - Number assigned by a social security agency.
              9) 'TXID': Tax Identification Number - Number assigned by a tax authority to an entity.
          example: CUST
          enum:
          - ARNU
          - CUST
          - CORP
          - DRLC
          - IDCD
          - NRIN
          - CCPT
          - SOCS
          - TXID
    NationalRegistrationNumber:
      properties:
        nationalRegistrationNumber:
          maxLength: 35
          minLength: 1
          type: string
          description: Number assigned by a national registration authority to an
            entity.
          nullable: false
          example: 501454-8989898-36
    NaturalPersonProprietaryIdentification:
      properties:
        proprietary:
          $ref: '#/components/schemas/GenericIdentification'
      description: Type of identification expressed as a proprietary code.
    NameAndAddress1:
      properties:
        nameAndAddress:
          $ref: '#/components/schemas/NameAndAddress1_nameAndAddress'
    NameAndAddress2:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 350
          minLength: 1
          type: string
          description: Name by which a party is known and which is usually used to
            identify that party.
          nullable: false
        address:
          $ref: '#/components/schemas/PostalAddress1'
      description: Name and address of the party.
    NoDisclosure:
      properties:
        noDisclosure:
          type: string
          description: |
            Shareholding information is not disclosed.
            Valid value\: **NORE** - indicates that there is no reason to report or no reason available to report.
          example: NORE
          default: NORE
    OwnershipTypeCode:
      type: object
      properties:
        code:
          type: string
          description: |
            Investor type expressed as an ISO 20022 code.

            Valid code(s) are\:
              1) 'USUF': Usufructuary - The person is ...
              2) 'OWNR': Owner - A person has full ownership on the asset.
              3) 'BOWN': Bare owner - A person has bare ownership on the asset.
          example: OWNR
          enum:
          - USUF
          - OWNR
          - BOWN
    OwnershipProprietaryIdentification:
      properties:
        proprietary:
          $ref: '#/components/schemas/GenericIdentification'
      description: Owner type expressed as a proprietary code.
    Ownership:
      type: object
      properties:
        ownershipType:
          type: object
          description: Specifies the type of ownership.
          oneOf:
          - $ref: '#/components/schemas/OwnershipTypeCode'
          - $ref: '#/components/schemas/OwnershipProprietaryIdentification'
        ownershipPercentage:
          pattern: ^(?=.{1,12}$)\d+(?:\.\d{0,10})?$
          type: string
          description: |
            Percentage of ownership that a person has on an asset.
            Rate expressed as a percentage, that is, in hundredths, for example, 0.7 is 7/10 of a percent, and 7.0 is 7%.
        usufructPercentage:
          pattern: ^(?=.{1,12}$)\d+(?:\.\d{0,10})?$
          type: string
          description: |
            Percentage of usufruct that a person has on an asset.
            Rate expressed as a percentage, that is, in hundredths, for example, 0.7 is 7/10 of a percent, and 7.0 is 7%.

            Total Digits: 11; Fraction Digits: 10; Base value 100.0
      description: Provides information about the ownership on an asset.
    ProprietaryIdentification:
      type: object
      properties:
        proprietaryIdentification:
          $ref: '#/components/schemas/GenericIdentification'
      description: |
        Unique and unambiguous identifier, as assigned to a financial institution using a proprietary
        identification scheme.
    PostalAddress1:
      required:
      - country
      type: object
      properties:
        addressType:
          type: string
          description: |
            Identifies the nature of the postal address.

            Valid code(s)\:

            1) 'ADDR': Address is the complete postal address.
            2) 'PBOX': Address is a postal office (PO) box.
            3) 'HOME': Address is the home address.
            4) 'BIZZ': Address is the business address.
            5) 'MLTO': Address is the address to which mail is sent.
            6) 'DLVY': Address is the address to which delivery is to take place.
          example: ADDR
          enum:
          - ADDR
          - PBOX
          - HOME
          - BIZZ
          - MLTO
          - DLVY
        addressLine:
          maxItems: 5
          minItems: 0
          type: array
          description: Information that locates and identifies a specific address,
            as defined by postal services, that is presented in free format text.
          items:
            maxLength: 70
            minLength: 1
            type: string
        streetName:
          maxLength: 70
          minLength: 1
          type: string
          description: Name of a street or thoroughfare.
        buildingNumber:
          maxLength: 16
          minLength: 1
          type: string
          description: Number that identifies the position of a building on a street.
        postBox:
          maxLength: 16
          minLength: 1
          type: string
          description: |
            Numbered box in a post office, assigned to a person or organisation, where letters are kept until called for.
        postCode:
          maxLength: 16
          minLength: 1
          type: string
          description: |
            Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.
        townName:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Name of a built-up area, with defined boundaries, and a local government.
        countrySubDivision:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Identifies a subdivision of a country for example, state, region, county.
        country:
          allOf:
          - title: Nation with its own government.
          - $ref: '#/components/schemas/Country'
      description: |
        Postal address of the party.
        Note: Information that locates and identifies a specific address, as defined by postal services.
    PostalAddress2:
      type: object
      properties:
        postalAddress:
          $ref: '#/components/schemas/PostalAddress1'
    RoleCode:
      properties:
        code:
          type: string
          description: |
            Role expressed as a code.
            Valid code(s)\:

            1) 'DIST': Distributor    - Party that act as an wholesaler of funds.
            2) 'LGRD': Legal Guardian - Party that has been appointed by a legal authority to act on behalf of a person judged to be incapacitated.
            3) 'DECM': Decision Maker - Party that is authorised to take investment decisions on behalf of the shareholder.
          example: DIST
          enum:
          - DIST
          - LGRD
          - DECM
    RoleProprietaryIdentification:
      properties:
        proprietary:
          $ref: '#/components/schemas/GenericIdentification'
      description: Role expressed as a proprietary code.
    SDHPlatformID:
      properties:
        sdhPlatformId:
          type: string
          description: |
            Unique platform ID issued by Broadridge to the underlying intermediary.
    SupplementaryData:
      minItems: 0
      type: array
      description: |
        Additional information that cannot be captured in the structured fields and/or any other specific block. As per the ISO20022-seev.047.001.01,
        this field may not be used without the explicit approval of a SEG and submission to the RA of ISO 20022 compliant structure(s) to be used in the
        Envelope element.
      items:
        $ref: '#/components/schemas/SupplementaryData_inner'
    ShareholdingBalanceQuantity:
      required:
      - unit
      properties:
        unit:
          pattern: ^(?=.{1,19}$)\d+(?:\.\d{0,17})?$
          type: string
          description: Quantity expressed as a number, for example, a number of shares.
          example: "0.45"
    SafeKeepingAccountAndHoldings:
      properties:
        safeKeepingAccountAndHoldings:
          minItems: 1
          type: array
          description: Details of the account, account sub-levels and holdings.
          items:
            $ref: '#/components/schemas/SafeKeepingAccountAndHoldings_safeKeepingAccountAndHoldings'
    ThirdPartyLegalPerson:
      properties:
        legalPerson:
          $ref: '#/components/schemas/ThirdPartyLegalPerson_legalPerson'
    ThirdPartyNaturalPerson:
      properties:
        naturalPerson:
          $ref: '#/components/schemas/ThirdPartyNaturalPerson_naturalPerson'
    URLAddress:
      properties:
        urlAddress:
          maxLength: 2048
          minLength: 1
          type: string
          description: |
            Address for the Universal Resource Locator (URL),
            for example, used over the www (HTTP) service.
    body:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
          description: Email address of the user
          format: email
        password:
          type: string
          description: A valid password
          format: password
    inline_response_201:
      required:
      - access_token
      - expires_in
      - expires_on
      - resource
      - token_type
      type: object
      properties:
        token_type:
          type: string
          description: The type of token
          default: Bearer
        expires_in:
          type: string
          description: |
            Duration of time(in seconds), for which the token is valid.
            By default the token is 14400 seconds i.e. 4 hours from the date and time of generation.
          default: "14400"
        expires_on:
          type: string
          description: Unix time or Epoch time, till which the token is valid for.
        resource:
          type: string
          description: The resource which is accessible by the token
        access_token:
          type: string
          description: JWT access token
      example:
        access_token: access_token
        resource: resource
        expires_on: expires_on
        token_type: Bearer
        expires_in: "14400"
    inline_response_400:
      type: object
      properties:
        status:
          type: boolean
        description:
          type: string
          description: Invalid request. Missing parameter.
    inline_response_401:
      type: object
      properties:
        status:
          type: boolean
        description:
          type: string
          description: Client authentication failed.
          default: Invalid user credentials
    inline_response_200:
      type: object
      properties:
        status:
          type: boolean
          description: |
            true if there are disclosure requests in "OPEN" and/or "PENDING" state. "false" otherwise.
        requests:
          type: array
          description: List of disclosure requests in "OPEN" and/or "PENDING" state.
          items:
            $ref: '#/components/schemas/inline_response_200_requests'
      example:
        requests:
        - metadata:
            requestOriginTimestamp: 2000-01-23T04:56:07.000+00:00
            requestReceiptTimestamp: 2000-01-23T04:56:07.000+00:00
            sender: ""
            requestMode:
              platform: PLATFORM
              referenceId: referenceId
            forwardRequestDeadlineDate: 2000-01-23T04:56:07.000+00:00
            responseDeadlineDate: 2000-01-23T04:56:07.000+00:00
            status: OPEN
          requestDetails:
            forwardRequestIndicator: "Yes"
            disclosureResponseDeadline: ""
            financialInstrumentationIdentification:
              isin: isin
            sharesQuantityThreshold: 45.6
            issuerDisclosureRequestIdentification: issuerDisclosureRequestIdentification
            disclosureRequestType: NEWM
            issuerDisclosureDeadline: ""
            supplementaryData:
            - envelope: ""
              placeAndName: placeAndName
            - envelope: ""
              placeAndName: placeAndName
            issuer: ""
            isinMarketCode: ""
            disclosureResponseRecipient:
              responseRecipientAddress: ""
              identification: ""
              recipientName: recipientName
            requestShareHeldDate: ""
            responseThroughChainIndicator: "No"
            shareholdersDisclosureRecordDate: ""
            shareholderRightsDirectiveIndicator: "Yes"
          requestId: requestId
        - metadata:
            requestOriginTimestamp: 2000-01-23T04:56:07.000+00:00
            requestReceiptTimestamp: 2000-01-23T04:56:07.000+00:00
            sender: ""
            requestMode:
              platform: PLATFORM
              referenceId: referenceId
            forwardRequestDeadlineDate: 2000-01-23T04:56:07.000+00:00
            responseDeadlineDate: 2000-01-23T04:56:07.000+00:00
            status: OPEN
          requestDetails:
            forwardRequestIndicator: "Yes"
            disclosureResponseDeadline: ""
            financialInstrumentationIdentification:
              isin: isin
            sharesQuantityThreshold: 45.6
            issuerDisclosureRequestIdentification: issuerDisclosureRequestIdentification
            disclosureRequestType: NEWM
            issuerDisclosureDeadline: ""
            supplementaryData:
            - envelope: ""
              placeAndName: placeAndName
            - envelope: ""
              placeAndName: placeAndName
            issuer: ""
            isinMarketCode: ""
            disclosureResponseRecipient:
              responseRecipientAddress: ""
              identification: ""
              recipientName: recipientName
            requestShareHeldDate: ""
            responseThroughChainIndicator: "No"
            shareholdersDisclosureRecordDate: ""
            shareholderRightsDirectiveIndicator: "Yes"
          requestId: requestId
        status: true
    inline_response_401_1:
      type: object
      properties:
        status:
          type: boolean
        description:
          type: string
          description: Description about the error.
    inline_response_422:
      type: object
      properties:
        status:
          type: boolean
        description:
          type: string
          description: Description about the error.
          default: Malformed/Expired Token
    inline_response_500:
      type: object
      properties:
        status:
          type: boolean
          default: false
        description:
          type: string
          default: Internal Server Error
    body_1:
      required:
      - checksum
      - filename
      type: object
      properties:
        checksum:
          type: string
          description: MD5 value of the file (in hex format) that is to be uploaded.
          example: 7be8db115ad78de0d8eadf0101de51dc
        filename:
          pattern: ^(.{32})\_([0-9]{4})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])(2[0-3]|[01][0-9])([0-5][0-9])([0-5][0-9])\.json$
          type: string
          description: |
            Name of the file that is to be uploaded.
            Format:
              <disclosureResponseIdentification>_YYYYMMDDHHMMSS.json
          example: 000039611a45bf75e10b0000d8f95248_20200407231655.json
    inline_response_201_1:
      required:
      - csrf_token
      - expires_in
      - expires_on
      - resource
      - token_type
      type: object
      properties:
        token_type:
          type: string
          description: The type of token
          default: X-CSRFToken
        expires_in:
          type: string
          description: |
            Duration of time(in seconds), the token is valid for.
            By default the token if valid for 2 hours(7200) from the date and time of creation.
          default: "14400"
        expires_on:
          type: string
          description: Unix time or Epoch time, the token is valid till.
        csrf_token:
          type: string
          description: CSRF Token
      example:
        expires_on: expires_on
        csrf_token: csrf_token
        token_type: X-CSRFToken
        expires_in: "14400"
    body_2:
      type: object
      properties:
        file:
          pattern: (.{32})\_([0-9]{4})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])(2[0-3]|[01][0-9])([0-5][0-9])([0-5][0-9])\.json$
          type: string
          description: |
            Disclosure response file to upload.
          format: binary
    inline_response_202:
      required:
      - description
      - fileId
      - filename
      - status
      type: object
      properties:
        status:
          type: boolean
          description: |
            "true" if the file has been accepted and is under processing and "false" otherwise.
        fileId:
          type: string
          description: Unique File Id generated by the API
        filename:
          type: string
          description: Name of the file that is uploaded.
        description:
          type: string
          description: Description on the status of processing
        errors:
          $ref: '#/components/schemas/Errors'
      example:
        filename: filename
        description: description
        errors:
          errors:
          - keyword: required
            message: message
            dataPath: dataPath
          - keyword: required
            message: message
            dataPath: dataPath
        status: true
        fileId: fileId
    inline_response_400_1:
      required:
      - description
      - fileId
      - filename
      - status
      type: object
      properties:
        status:
          type: boolean
        fileId:
          type: string
          description: Unique File Id generated by the API
        filename:
          type: string
          description: Name of the file that is uploaded.
        description:
          type: string
          description: Description of the error.
        errors:
          minItems: 0
          type: array
          description: Details of errors, if any.
          items:
            $ref: '#/components/schemas/inline_response_400_1_errors'
    body_3:
      required:
      - disclosureResponseIdentification
      type: object
      properties:
        disclosureResponseIdentification:
          maxLength: 35
          minLength: 1
          type: string
          description: Disclosure response identification Id.
          example: 4c582ed0eb3c01cb671000014d93738f
        fileId:
          minLength: 1
          type: string
          description: File ID.
          example: a55832d06d92160dc470403e79d104af
    inline_response_200_1:
      required:
      - disclosureResponseIdentification
      - status
      type: object
      properties:
        status:
          type: boolean
        description:
          type: string
          description: Description of the response
        disclosureResponseIdentification:
          maxLength: 35
          minLength: 1
          type: string
          description: Disclosure Response Identification
        result:
          minItems: 0
          type: array
          description: Provides the details of the files under processing/already
            processed.
          items:
            $ref: '#/components/schemas/inline_response_200_1_result'
      example:
        disclosureResponseIdentification: disclosureResponseIdentification
        result:
        - filename: 000039611a45bf75e10b0000d8f95248_20200407231655.json
          fileProcessingStatus: PROCESSING
          description: description
          responseStatus: INVALID
          errors:
            errors:
            - keyword: required
              message: message
              dataPath: dataPath
            - keyword: required
              message: message
              dataPath: dataPath
          fileId: a55832d06d92160dc470403e79d104af
        - filename: 000039611a45bf75e10b0000d8f95248_20200407231655.json
          fileProcessingStatus: PROCESSING
          description: description
          responseStatus: INVALID
          errors:
            errors:
            - keyword: required
              message: message
              dataPath: dataPath
            - keyword: required
              message: message
              dataPath: dataPath
          fileId: a55832d06d92160dc470403e79d104af
        description: description
        status: true
    inline_response_404:
      type: object
      properties:
        status:
          type: boolean
          default: false
        description:
          type: string
          description: Description about the error.
    Errors_errors:
      required:
      - dataPath
      - keyword
      - message
      type: object
      properties:
        keyword:
          type: string
          description: Describes the nature of the field i.e. required.
          enum:
          - required
          - oneOf
          - anyOf
        dataPath:
          type: string
          description: Location of the error
        message:
          type: string
          description: Description of the error
      example:
        keyword: required
        message: message
        dataPath: dataPath
    LegalPerson_legalPerson:
      required:
      - identification
      - nameAndAddress
      type: object
      properties:
        nameAndAddress:
          $ref: '#/components/schemas/NameAndAddress2'
        emailAddress:
          allOf:
          - title: Address for electronic mail (e-mail).
          - $ref: '#/components/schemas/EmailAddress'
        identification:
          type: object
          description: Identification of the party.
          oneOf:
          - $ref: '#/components/schemas/NationalRegistrationNumber'
          - $ref: '#/components/schemas/LEI'
          - $ref: '#/components/schemas/AnyBIC'
          - $ref: '#/components/schemas/ClientIdentification'
          - $ref: '#/components/schemas/ProprietaryIdentification'
        countryOfIncorporation:
          allOf:
          - title: Country in which the company is incorporated or legally registered.
          - $ref: '#/components/schemas/Country'
        yearOfIncorporation:
          maxLength: 4
          minLength: 4
          pattern: ^(19[0-9]\d|20[0-9]\d)$
          type: string
          description: |
            Year in which the legal entity has been incorporated.
        activityIndicator:
          pattern: ^[A-U]{1,1}[0-9]{0,4}$
          type: string
          description: |
            Economical activity of the investor according to the ISIC standard.

            Additional details\:
            Identifier of economic activities by ISIC (United Nations' International Standard Industrial Classification of all Economic Activities).
        investorType:
          $ref: '#/components/schemas/InvestorType'
        ownership:
          $ref: '#/components/schemas/Ownership'
      description: Legal entity.
    NaturalPerson_nameAndAddress:
      required:
      - firstName
      - surname
      type: object
      properties:
        namePrefix:
          type: string
          description: |
            Prefix, as a title before a person's name.
            Valid titles\:
              1) 'DOCT': Doctor         - Title of the person is Doctor or Dr.
              2) 'MADM': Madam          - Title of the person is Madam.
              3) 'MISS': Miss           - Title of the person is Miss.
              4) 'MIST': Mister         - Title of the person is Mister or Mr.
              5) 'MIKS': Gender Neutral - Title of the person is gender neutral (Mx).
          enum:
          - DOCT
          - MADM
          - MISS
          - MIST
          - MIKS
        firstName:
          maxLength: 350
          minLength: 1
          type: string
          description: First name(s) by which a natural person is known.
        surname:
          maxLength: 350
          minLength: 1
          type: string
          description: Name (s) by which a natural person is known and which is usually
            used to identify that party.
        address:
          $ref: '#/components/schemas/PostalAddress1'
    NaturalPerson_identification:
      required:
      - identification
      type: object
      properties:
        identification:
          maxLength: 35
          minLength: 1
          type: string
          description: Natural Person local identification.
        identificationType:
          type: object
          description: Type of local identification for a natural person.
          oneOf:
          - $ref: '#/components/schemas/NaturalPersonLocalIdentification'
          - $ref: '#/components/schemas/NaturalPersonProprietaryIdentification'
      description: Natural Person identification details
    NaturalPerson_dateAndPlaceOfBirth:
      required:
      - birthDate
      type: object
      properties:
        birthDate:
          type: string
          description: |
            Date on which a person is born.
            A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format.
          format: date
          example: 2019-08-29
        provinceOfBirth:
          maxLength: 35
          minLength: 1
          type: string
          description: Province where a person was born.
        cityOfBirth:
          maxLength: 35
          minLength: 1
          type: string
          description: City where a person was born.
        countryOfBirth:
          allOf:
          - title: Country where a person was born.
          - $ref: '#/components/schemas/Country'
      description: Date on which and place at which a person is born.
    NaturalPerson_naturalPerson:
      required:
      - identification
      - nameAndAddress
      type: object
      properties:
        nameAndAddress:
          $ref: '#/components/schemas/NaturalPerson_nameAndAddress'
        emailAddress:
          allOf:
          - title: Address for electronic mail (e-mail).
          - $ref: '#/components/schemas/EmailAddress'
        identification:
          $ref: '#/components/schemas/NaturalPerson_identification'
        nationality:
          allOf:
          - title: Nationality of the person.
          - $ref: '#/components/schemas/Country'
        dateAndPlaceOfBirth:
          $ref: '#/components/schemas/NaturalPerson_dateAndPlaceOfBirth'
        investorType:
          $ref: '#/components/schemas/InvestorType'
        ownership:
          $ref: '#/components/schemas/Ownership'
    NameAndAddress1_nameAndAddress:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 350
          minLength: 1
          type: string
          description: Name by which a party is known and which is usually used to
            identify that party.
          nullable: false
        address:
          $ref: '#/components/schemas/PostalAddress1'
      description: Name and address of the party.
    SupplementaryData_inner:
      required:
      - envelope
      type: object
      properties:
        placeAndName:
          maxLength: 350
          minLength: 1
          type: string
          description: |
            Unambiguous reference to the location where the supplementary data must be inserted in the message instance. In the case of XML,
            this is expressed by a valid XPath.
        envelope:
          description: |
            Technical element wrapping the supplementary data. Type\: (External schema).
            Technical component that contains the validated supplementary data information. This technical envelope allows to segregate the supplementary data
            information from any other information.
          nullable: false
      example:
        envelope: ""
        placeAndName: placeAndName
    SafeKeepingAccountAndHoldings_accountSubLevel_thirdParty:
      required:
      - identification
      - role
      type: object
      properties:
        role:
          type: object
          description: Role played by the third party.
          oneOf:
          - $ref: '#/components/schemas/RoleCode'
          - $ref: '#/components/schemas/RoleProprietaryIdentification'
        identification:
          type: object
          description: Identification of the third party.
          oneOf:
          - $ref: '#/components/schemas/ThirdPartyLegalPerson'
          - $ref: '#/components/schemas/ThirdPartyNaturalPerson'
    SafeKeepingAccountAndHoldings_accountSubLevel_shareholdingBalance:
      required:
      - quantity
      - shareholdingType
      type: object
      properties:
        shareholdingType:
          type: string
          description: |
            Identifies the category of shareholding.

            Valid categories\:
            1) 'BENE': Beneficial shareholding - Shares are held on behalf of the beneficial owner.
                Usage\: this type should be used to report assets the intermediary holds on behalf of a final beneficial owner.

            2) 'NOMI': Nominee shareholding - Shares are held on behalf of an intermediary.
                Usage\: this type should be used to report assets the intermediary holds on behalf of another intermediary.

            3) 'OOAC': On own account - Shares are held by the responding intermediary for its own account.
                Usage\: this type should only be used to report the intermediary's own assets if and when the
                intermediary comingles them with the one of their clients.
                Within jurisdictions where commingling is not allowed, this type should not be used.

            4) 'UKWN': Unknown - Shareholding type is unknown.
                Usage\: this type should be used when the intermediary's client hasn't been classified.
          enum:
          - BENE
          - NOMI
          - OOAC
          - UKWN
        quantity:
          type: object
          description: Number of shares of this type of shareholding or with this
            date of shareholding held by the account owner.
          allOf:
          - $ref: '#/components/schemas/ShareholdingBalanceQuantity'
        forwardRequestDetails:
          description: Details of the underlying intermediaries to which the request
            must be forwarded.
          allOf:
          - required:
            - deliveryPreference
            type: object
            properties:
              deliveryPreference:
                type: string
                description: |
                  Indicates the delivery preference.
                  SWF - "SWIFT"
                  EML - "EMAIL"
                  ALL - "SWIFT" and "EMAIL"
                enum:
                - SWF
                - EML
                - ALL
          - anyOf:
            - $ref: '#/components/schemas/DistinguishedName'
            - $ref: '#/components/schemas/EmailAddresses'
            - $ref: '#/components/schemas/IntermediaryIdentification'
        initialDateOfShareholding:
          type: object
          description: Date as from when the shares have been held by the shareholder
            on its account.
          oneOf:
          - $ref: '#/components/schemas/DateChoice'
          - $ref: '#/components/schemas/DateCode'
        thirdParty:
          minItems: 0
          type: array
          description: |
            Third party who is authorised to take specific actions on behalf of the shareholder.
          items:
            $ref: '#/components/schemas/SafeKeepingAccountAndHoldings_accountSubLevel_thirdParty'
        supplementaryData:
          $ref: '#/components/schemas/SupplementaryData'
    SafeKeepingAccountAndHoldings_accountSubLevel_disclosure:
      required:
      - accountHolder
      - shareholdingBalance
      type: object
      properties:
        safekeepingAccount:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Account where financial instruments are maintained. Account serviced by the responding intermediary for an account holder.
        accountHolder:
          type: object
          description: Party that legally owns the account.
          oneOf:
          - $ref: '#/components/schemas/LegalPerson'
          - $ref: '#/components/schemas/NaturalPerson'
        shareholdingBalance:
          minItems: 1
          type: array
          description: Detailed shareholding balance information for an account.
          items:
            $ref: '#/components/schemas/SafeKeepingAccountAndHoldings_accountSubLevel_shareholdingBalance'
    SafeKeepingAccountAndHoldings_accountSubLevel:
      type: object
      properties:
        nonDisclosedShareholdingBalanceQuantity:
          type: object
          description: Quantity of shares for which shareholding details are not disclosed.
          allOf:
          - $ref: '#/components/schemas/ShareholdingBalanceQuantity'
        belowThresholdShareholdingQuantity:
          type: object
          description: |
            Quantity of shares for which shareholding details are not reported as the quantity
            of shares owned by the shareholder is under the threshold limit.
          allOf:
          - $ref: '#/components/schemas/ShareholdingBalanceQuantity'
        disclosure:
          minItems: 0
          type: array
          description: Details of the account sub-levels and holdings.
          items:
            $ref: '#/components/schemas/SafeKeepingAccountAndHoldings_accountSubLevel_disclosure'
      description: Shareholdings information at account sub level.
    SafeKeepingAccountAndHoldings_safeKeepingAccountAndHoldings:
      required:
      - accountServicer
      - safeKeepingAccount
      - shareholdingBalanceOnClientAccount
      - shareholdingBalanceOnOwnAccount
      - totalShareholdingBalance
      type: object
      properties:
        safeKeepingAccount:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Account where financial instruments are maintained. Account held by the responding intermediary with its account servicer.
        accountServicer:
          type: object
          description: |
            Party that manages the account on behalf of the account owner, that manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account
          oneOf:
          - $ref: '#/components/schemas/AnyBIC'
          - $ref: '#/components/schemas/ProprietaryIdentification'
          - $ref: '#/components/schemas/LEI'
        shareholdingBalanceOnOwnAccount:
          type: object
          description: Number of shares held by the responding intermediary on its
            own account.
          allOf:
          - $ref: '#/components/schemas/ShareholdingBalanceQuantity'
        shareholdingBalanceOnClientAccount:
          type: object
          description: Number of shares held by the responding intermediary on account
            of someone else.
          allOf:
          - $ref: '#/components/schemas/ShareholdingBalanceQuantity'
        totalShareholdingBalance:
          type: object
          description: Total number of shares held by the responding intermediary.
          allOf:
          - $ref: '#/components/schemas/ShareholdingBalanceQuantity'
        accountSubLevel:
          $ref: '#/components/schemas/SafeKeepingAccountAndHoldings_accountSubLevel'
    ThirdPartyLegalPerson_legalPerson:
      required:
      - identification
      type: object
      properties:
        nameAndAddress:
          $ref: '#/components/schemas/NameAndAddress1'
        identification:
          type: object
          description: Identification of the party.
          oneOf:
          - $ref: '#/components/schemas/NationalRegistrationNumber'
          - $ref: '#/components/schemas/LEI'
          - $ref: '#/components/schemas/AnyBIC'
          - $ref: '#/components/schemas/ClientIdentification'
          - $ref: '#/components/schemas/ProprietaryIdentification'
      description: Legal entity.
    ThirdPartyNaturalPerson_naturalPerson_nameAndAddress:
      required:
      - firstName
      - surname
      type: object
      properties:
        firstName:
          maxLength: 350
          minLength: 1
          type: string
          description: First name(s) by which a natural person is known.
        surname:
          maxLength: 350
          minLength: 1
          type: string
          description: Name (s) by which a natural person is known and which is usually
            used to identify that party
        address:
          $ref: '#/components/schemas/PostalAddress1'
    ThirdPartyNaturalPerson_naturalPerson:
      required:
      - identification
      - nameAndAddress
      type: object
      properties:
        nameAndAddress:
          $ref: '#/components/schemas/ThirdPartyNaturalPerson_naturalPerson_nameAndAddress'
        identification:
          $ref: '#/components/schemas/NaturalPerson_identification'
      description: Private Person
    inline_response_200_requestDetails_financialInstrumentationIdentification:
      type: object
      properties:
        isin:
          pattern: ^[A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}$
          type: string
          description: |
            International Securities Identification Number (ISIN). A numbering system designed by the
            United Nation's International Organisation for Standardisation (ISO). The ISIN is composed of a 2-character prefix representing the country of issue, followed by the national security number (if one exists), and a check digit. Each country has a national numbering agency that assigns ISIN numbers for securities in that country.
      description: |
        Identifies the financial instrument.
        As per the EU regulation 2018/22, ISIN is mandatory for the shareholder disclosure requests.
      example:
        isin: isin
    inline_response_200_requestDetails_disclosureResponseRecipient:
      required:
      - identification
      - recipientName
      - responseRecipientAddress
      type: object
      properties:
        identification:
          type: object
          description: Identification of the party to which the disclosure response
            must be sent.
          oneOf:
          - $ref: '#/components/schemas/ProprietaryIdentification'
          - $ref: '#/components/schemas/LEI'
        recipientName:
          maxLength: 350
          minLength: 1
          type: string
          description: |
            Name of the party to which the disclosure response must be sent.
        responseRecipientAddress:
          type: object
          description: Address of the party to which the disclosure response must
            be sent.
          anyOf:
          - $ref: '#/components/schemas/AnyBIC'
          - $ref: '#/components/schemas/PostalAddress2'
          - $ref: '#/components/schemas/EmailAddress'
          - $ref: '#/components/schemas/URLAddress'
      description: |
        Issuer or third party nominated by the issuer to whom the disclosure response shall be
        transmitted by the intermediary.
      example:
        responseRecipientAddress: ""
        identification: ""
        recipientName: recipientName
    inline_response_200_requestDetails:
      required:
      - disclosureRequestType
      - disclosureResponseRecipient
      - financialInstrumentationIdentification
      - isinMarketCode
      - issuerDisclosureDeadline
      - issuerDisclosureRequestIdentification
      - shareholdersDisclosureRecordDate
      type: object
      properties:
        issuerDisclosureRequestIdentification:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Official and unique identification assigned to a shareholders identification disclosure request
            process by the issuer or third party nominated by it.
        disclosureRequestType:
          type: string
          description: |
            Specifies the type of disclosure request.

            Valid request types:
              1) "NEWM": New - New Disclosure Request
              2) "REPL": Replacement - Disclosure request replacing a previously sent request.
          default: NEWM
          enum:
          - NEWM
          - REPL
        forwardRequestIndicator:
          type: string
          description: |
            Indicates whether the request is to be forwarded to and responded by the
            other intermediaries down the chain of intermediaries or not.

            If not to be forwarded, the indicator may not be present.
            1) Yes: When True
            2) No: When False
          default: "Yes"
          enum:
          - "Yes"
          - "No"
        shareholderRightsDirectiveIndicator:
          type: string
          description: |
            Indicates whether the request was initiated by the first intermediary in the custody chain in accordance with SRD II.
            1) Yes: When True
            2) No: When False
          enum:
          - "Yes"
          - "No"
        financialInstrumentationIdentification:
          $ref: '#/components/schemas/inline_response_200_requestDetails_financialInstrumentationIdentification'
        shareholdersDisclosureRecordDate:
          type: object
          description: |
            Date set by the issuer on which shareholders identity is determined based on the settled
            positions struck in the books of the Issuer CSD or any other first intermediary at the
            close of business day.
          oneOf:
          - $ref: '#/components/schemas/Date'
          - $ref: '#/components/schemas/DateCode'
        sharesQuantityThreshold:
          pattern: ^(?=.{1,19}$)\d+(?:\.\d{0,17})?$
          type: number
          description: |
            Minimum number of shares held by a shareholder above which the identification must be disclosed.
            Format: Decimal Number - Total Digits: 18, Fraction Digits: 17
          example: 45.6
        requestShareHeldDate:
          type: object
          description: |
            Indicates whether the date from which the shares have been held must be communicated
            into the disclosure response and according to which method theses dates have to be communicated.
          oneOf:
          - $ref: '#/components/schemas/DateCalculationMethod'
          - $ref: '#/components/schemas/DateCalculationDescription'
        disclosureResponseRecipient:
          $ref: '#/components/schemas/inline_response_200_requestDetails_disclosureResponseRecipient'
        issuerDisclosureDeadline:
          type: object
          description: |
            Latest date/time set by the issuer or a third party appointed by the issuer at which a response
            to the request to disclose shareholder identity shall be provided by each intermediary to the recipient
            to whom the response must be sent.
          oneOf:
          - $ref: '#/components/schemas/Date'
          - $ref: '#/components/schemas/DateCode'
        responseThroughChainIndicator:
          type: string
          description: |
            Indicates whether the shareholder identification disclosure response is to be sent back down
            the chain of intermediaries or directly to the identified response recipient.

            Note: This is currently not supported by Broadridge Shareholder's Disclosure Hub.
          default: "No"
          enum:
          - "Yes"
          - "No"
        disclosureResponseDeadline:
          type: object
          description: |
            Latest date/time set by an intermediary at which a response to the request to disclose
            shareholder identity shall be provided when sending the response though the chain of intermediaries.

            Note: This field is set only when "responseThroughChainIndicator" is set to "Yes".
          oneOf:
          - $ref: '#/components/schemas/Date'
          - $ref: '#/components/schemas/DateCode'
        issuer:
          type: object
          description: Issuer of the financial instrument.
          oneOf:
          - $ref: '#/components/schemas/AnyBIC'
          - $ref: '#/components/schemas/ProprietaryIdentification'
          - $ref: '#/components/schemas/NameAndAddress1'
          - $ref: '#/components/schemas/LEI'
        isinMarketCode:
          description: |
            Country code of the market in which the Issuer is registered.
            The code will indicate the market of the request and the respective market specific rule will be applied on the response data.
          allOf:
          - $ref: '#/components/schemas/Country'
        supplementaryData:
          $ref: '#/components/schemas/SupplementaryData'
      example:
        forwardRequestIndicator: "Yes"
        disclosureResponseDeadline: ""
        financialInstrumentationIdentification:
          isin: isin
        sharesQuantityThreshold: 45.6
        issuerDisclosureRequestIdentification: issuerDisclosureRequestIdentification
        disclosureRequestType: NEWM
        issuerDisclosureDeadline: ""
        supplementaryData:
        - envelope: ""
          placeAndName: placeAndName
        - envelope: ""
          placeAndName: placeAndName
        issuer: ""
        isinMarketCode: ""
        disclosureResponseRecipient:
          responseRecipientAddress: ""
          identification: ""
          recipientName: recipientName
        requestShareHeldDate: ""
        responseThroughChainIndicator: "No"
        shareholdersDisclosureRecordDate: ""
        shareholderRightsDirectiveIndicator: "Yes"
    inline_response_200_metadata_requestMode:
      required:
      - platform
      - referenceId
      type: object
      properties:
        platform:
          type: string
          description: The channel through which the request was created/received.
          enum:
          - PLATFORM
          - SWIFT
          - EMAIL
        referenceId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Broadridge internal reference ID of the PLATFORM, EMAIL or SWIFT through which the request was received by the Hub participant via the Hub;
            used for audit logs
      description: Mode of request.
      example:
        platform: PLATFORM
        referenceId: referenceId
    inline_response_200_metadata:
      required:
      - forwardDeadlineDate
      - requestMode
      - requestReceiptTimestamp
      - responseDeadlineDate
      - sender
      - status
      type: object
      properties:
        status:
          type: string
          description: |
            Status of the disclosure requests.

            1) "OPEN"     : Requests which are yet to be responded by the client/intermediary.
            2) "PENDING"  : Requests which are responded by the client/intermediary with the intermediaries information but yet to
                provide the final responses.

                disclosureType “INTERMEDIARIES” received; disclosureType “RESPONSE” not received; or disclosureType “RESPONSE” received but with errors
          enum:
          - OPEN
          - PENDING
        requestMode:
          $ref: '#/components/schemas/inline_response_200_metadata_requestMode'
        requestOriginTimestamp:
          type: string
          description: |
            The date and time at which the request originated/created by the issuer/agent.

            Note: This value will be populated only when the disclosure request is created on Broadridge's Shareholder Disclosure Hub.
          format: date-time
        requestReceiptTimestamp:
          type: string
          description: The date and time when the Hub first received the request for
            the specific Hub participant/organization.
          format: date-time
        forwardRequestDeadlineDate:
          type: string
          description: |
            Hub calculated date and time by when Hub participant must supply underlying intermediary client information, if present;
            typically same-day.
          format: date-time
        responseDeadlineDate:
          type: string
          description: |
            Hub calculated date and time by when the Hub participant must supply all required shareholder information
          format: date-time
        sender:
          type: object
          description: The identification of entity from which request is received
            (typically issuer or issuer agent or upstream intermediary)
          anyOf:
          - $ref: '#/components/schemas/AnyBIC'
          - $ref: '#/components/schemas/LEI'
          - $ref: '#/components/schemas/EmailAddress'
          - $ref: '#/components/schemas/NameAndAddress1'
      description: Metadata of the disclosure request
      example:
        requestOriginTimestamp: 2000-01-23T04:56:07.000+00:00
        requestReceiptTimestamp: 2000-01-23T04:56:07.000+00:00
        sender: ""
        requestMode:
          platform: PLATFORM
          referenceId: referenceId
        forwardRequestDeadlineDate: 2000-01-23T04:56:07.000+00:00
        responseDeadlineDate: 2000-01-23T04:56:07.000+00:00
        status: OPEN
    inline_response_200_requests:
      required:
      - metadata
      - requestDetails
      - requestId
      type: object
      properties:
        requestId:
          pattern: ^[A-Za-z0-9]{35}
          type: string
          description: Unique request ID - For internal use by Broadridge Financial
            Services.
        requestDetails:
          $ref: '#/components/schemas/inline_response_200_requestDetails'
        metadata:
          $ref: '#/components/schemas/inline_response_200_metadata'
      example:
        metadata:
          requestOriginTimestamp: 2000-01-23T04:56:07.000+00:00
          requestReceiptTimestamp: 2000-01-23T04:56:07.000+00:00
          sender: ""
          requestMode:
            platform: PLATFORM
            referenceId: referenceId
          forwardRequestDeadlineDate: 2000-01-23T04:56:07.000+00:00
          responseDeadlineDate: 2000-01-23T04:56:07.000+00:00
          status: OPEN
        requestDetails:
          forwardRequestIndicator: "Yes"
          disclosureResponseDeadline: ""
          financialInstrumentationIdentification:
            isin: isin
          sharesQuantityThreshold: 45.6
          issuerDisclosureRequestIdentification: issuerDisclosureRequestIdentification
          disclosureRequestType: NEWM
          issuerDisclosureDeadline: ""
          supplementaryData:
          - envelope: ""
            placeAndName: placeAndName
          - envelope: ""
            placeAndName: placeAndName
          issuer: ""
          isinMarketCode: ""
          disclosureResponseRecipient:
            responseRecipientAddress: ""
            identification: ""
            recipientName: recipientName
          requestShareHeldDate: ""
          responseThroughChainIndicator: "No"
          shareholdersDisclosureRecordDate: ""
          shareholderRightsDirectiveIndicator: "Yes"
        requestId: requestId
    inline_response_400_1_errors:
      required:
      - dataPath
      - description
      - errors
      - keyword
      properties:
        keyword:
          type: string
          description: |
            Describes the nature of the field i.e. if it is required for e.g.
          example: required
        dataPath:
          type: string
          description: Location of the error in the document.
        description:
          type: string
          description: Details of the error.
    inline_response_200_1_result:
      required:
      - errors
      - fileId
      - fileProcessingStatus
      - fileStatus
      - fileStatusDescription
      - filename
      type: object
      properties:
        fileId:
          maxLength: 32
          type: string
          description: Unique file Id that was generated for the disclosure response
            file uploaded.
          example: a55832d06d92160dc470403e79d104af
        fileProcessingStatus:
          type: string
          description: Provides the processing status of the files.
          enum:
          - PROCESSING
          - COMPLETED
          - REJECTED
        filename:
          maxLength: 52
          type: string
          description: Filename
          example: 000039611a45bf75e10b0000d8f95248_20200407231655.json
        responseStatus:
          type: string
          description: Validation status of the disclosure response.
          enum:
          - INVALID
          - VALID_WITH_ERRORS
          - VALID
        description:
          type: string
          description: Description associated with file processing status.
        errors:
          $ref: '#/components/schemas/Errors'
      example:
        filename: 000039611a45bf75e10b0000d8f95248_20200407231655.json
        fileProcessingStatus: PROCESSING
        description: description
        responseStatus: INVALID
        errors:
          errors:
          - keyword: required
            message: message
            dataPath: dataPath
          - keyword: required
            message: message
            dataPath: dataPath
        fileId: a55832d06d92160dc470403e79d104af
  responses:
    Unauthorized:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_401_1'
          example:
            status: false
            description: Invalid token authentication scheme
    Unprocessable-Entity:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_422'
          example:
            status: false
            description: Malformed/Expired Token
    Unprocessable-Entity-File-Upload:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_422'
          examples:
            InvalidAccessToken:
              value:
                status: false
                description: Malformed/Expired Token
            InvalidCSRFToken:
              value:
                status: false
                description: Malformed/Expired X-CSRFToken
    Internal-Server-Error:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_500'
          example:
            status: false
            descrption: Internal Server Error
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
